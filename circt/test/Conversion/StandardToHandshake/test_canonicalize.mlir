// NOTE: Assertions have been autogenerated by utils/update_mlir_test_checks.py
// RUN: circt-opt -canonicalize %s | FileCheck %s
module {

  // CHECK-LABEL: handshake.func @simple(
  // CHECK-SAME:                         %[[VAL_0:.*]]: none, ...) -> none {
  handshake.func @simple(%arg0: none, ...) -> none {

    // CHECK: %[[VAL_1:.*]] = "handshake.constant"(%[[VAL_0:.*]]) {value = 1 : index} : (none) -> index
    %0 = "handshake.constant"(%arg0) {value = 1 : index} : (none) -> index
    
    // CHECK-NOT: %[[TMP_0:.*]] = "handshake.branch"(%[[VAL_0:.*]]) {control = true} : (none) -> none
    // CHECK-NOT: %[[TMP_1:.*]] = "handshake.branch"(%[[VAL_1:.*]]) {control = false} : (index) -> index
    %1 = "handshake.branch"(%arg0) {control = true} : (none) -> none
    %2 = "handshake.branch"(%0) {control = false} : (index) -> index

    // CHECK-NOT: %[[TMP_2:.*]] = "handshake.merge"(%[[TMP_0:.*]]) : (none) -> none
    // CHECK-NOT: %[[TMP_3:.*]] = "handshake.merge"(%[[TMP_1:.*]]) : (index) -> index
    %3 = "handshake.merge"(%1) : (none) -> none
    %4 = "handshake.merge"(%2) : (index) -> index

    // CHECK-NEXT: %[[VAL_2:.*]]:2 = "handshake.fork"(%[[VAL_0:.*]]) {control = true} : (none) -> (none, none)
    %5:2 = "handshake.fork"(%3) {control = true} : (none) -> (none, none)
    %6 = "handshake.constant"(%5#0) {value = 42 : index} : (none) -> index
    %7 = addi %4, %6 : index
    "handshake.sink"(%7) : (index) -> ()
    handshake.return %5#1 : none
  }
}